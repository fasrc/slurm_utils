#!/usr/bin/env perl
@lines = qx/scontrol -o show node/;
printf ("%-14s %6s %6s %6s %8s %8s %6s  %6s %6s %-15s\n","Hostname","Cores","InUse","Load","ActNorm","TheoNorm","%Eff","Mem","Alloc","State");
foreach (@lines){
    chomp;
    ($reason) = $_ =~ /Reason=(.*)/;
    %data = map {/([^= ]+)/ => /=\s*(.*)/} split /\s+/;
    $data{'Reason'} = $reason;
   if ($data{'Arch'}){
        printf ("%-14s %6d %6d",$data{'NodeName'},$data{'CPUTot'},$data{'CPUAlloc'});
        #if ($data{'CPUAlloc'} > 0){ printf (" %6.1f ",( $data{'CPUAlloc'} / $data{'CPUTot'} ) * 100); }
        #if ($data{'CPUAlloc'} > 0){ printf (" %6.1f %6.1f ",( $data{'CPUAlloc'} / $data{'CPUTot'} ) * 100 ), ( $data{'CPULoad'} / $data{'CPUTot'} ); }
        if ($data{'CPUTot'} > 0) { printf (" %6.1f %8.1f %8.1f", $data{'CPULoad'}, ($data{'CPULoad'}/$data{'CPUTot'}), ($data{'CPUAlloc'}/$data{'CPUTot'}));}
        if ($data{'CPUAlloc'} > 0) { printf (" %6d ", ($data{'CPULoad'}/$data{'CPUAlloc'}*100));} else {printf (" %6s ", "n/a"); }
        printf (" %6d %6d %-15s", int($data{'RealMemory'} / 1000),int( $data{'AllocMem'} / 1000 ),$data{'State'}); 
        if ($data{'Reason'}) {print $data{'Reason'};}
        print "\n";
   }
   else {printf ("%-14s %6s %6s %6s %8s %8s %6s %6s %6s  %-15s %s\n",$data{'NodeName'},"---","---","---","---","---","---","---","---","DOWN",$data{'Reason'});}
}

